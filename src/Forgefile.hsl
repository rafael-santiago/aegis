#
# Copyright (c) 2020, Rafael Santiago
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#

include Toolsets.hsl

local var srcs type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;

local var curr_toolset type string;
local var deps type string;

project libaegis : toolset $curr_toolset :
                            dependencies $deps : $srcs, $includes, $cflags, $libraries, $ldflags, "libaegis.a";

libaegis.preloading() {
    $curr_toolset = get_lib_toolset();
}

libaegis.prologue() {
    var option type list;
    $option = hefesto.sys.get_option("mkdist");
    if ($option.count() > 0) {
        build("dist");
    }
    $srcs.ls(".*\\.c$");
    var platform type string;
    $platform = hefesto.sys.os_name();
    if (hefesto.sys.cd($platform)) {
        $deps = get_c_cpp_deps();
        $srcs.ls(".*\\.c$");
        hefesto.sys.cd("..");
    } else {
        hefesto.sys.echo("ERROR: Unable to find native implementation file for " + $platform + ".\n");
        hefesto.project.abort(1);
    }
    if ($platform == "linux" || $platform == "freebsd" || $platform == "netbsd" || $platform == "openbsd") {
        # INFO(Rafael): Posix thread compliant platforms.
        hefesto.sys.cd("pthread");
        $srcs.ls(".*\\.c$");
        hefesto.sys.cd("..");
    }
    $includes = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $libraries = hefesto.sys.get_option("libraries");
    $ldflags = hefesto.sys.get_option("ldflags");
    $deps = $deps + get_c_cpp_deps();
    hefesto.sys.echo("_____________\nBUILD STARTED\n");
}

libaegis.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        build("test");
        hefesto.sys.echo("_____________\nBUILD SUCCESS\n");
    }
}
